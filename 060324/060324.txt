1) Considere um conjunto S de valores  representado por uma tabela de endereçamento fechado T de comprimento m. 
Assumindo que serão inseridos |S| valores, descreva um procedimento que encontre o elemento máximo de S. 
Qual é o desempenho de seu procedimento no pior caso?
R: Percorrer a tabela e comparar o valor com um máximo atual, se diferente de nulo e maior que o máximo atual, atualiza o máximo atual.
No pior caso devemos percorrer toda a tabela, complexidade O(m) (m sendo o tamanho da tabela)

2) Demonstre (desenhe) a inserção das chaves 5, 28, 19, 15, 20, 33, 12, 17 e 10 em uma tabela hash com colisões 
resolvidas por encadeamento. Seja a tabela com 9 posições, e seja a função hash h(k)=k mod 9

5  mod 9 = 5 
28 mod 9 = 1 
19 mod 9 = 1 
15 mod 9 = 6 
20 mod 9 = 2 
33 mod 9 = 6 
12 mod 9 = 3 
17 mod 9 = 8 
10 mod 9 = 1 

0: 
1: 5 -> 28 -> 19 -> 10
2: 20
3: 12
4: 
5: 
6: 15 -> 33
7: 
8: 17

3) Implemente uma tabela hash de endereçamento fechado para inserção de strings. Sua tabela deve 
conter cada nome da lista abaixo, e retornar a posição do nome na lista de nomes. 
https://github.com/emersonsoares/SampleDataGenerator/blob/master/SampleDataGenerator/Resources/nomes.txt
Utilize a função hash para strings definida abaixo (a implementação pode ser feita em qualquer linguagem):

